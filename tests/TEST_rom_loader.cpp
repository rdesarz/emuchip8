#include "gtest/gtest.h"
#include "interpreter/memory.h"
#include "interpreter/rom_loader.h"

using namespace chip8;

static const std::vector<uint8_t> LOGO_EXAMPLE = {
    0x00, 0xE0, 0xA2, 0x2A, 0x60, 0x0C, 0x61, 0x08, 0xD0, 0x1F, 0x70, 0x09,
    0xA2, 0x39, 0xD0, 0x1F, 0xA2, 0x48, 0x70, 0x08, 0xD0, 0x1F, 0x70, 0x04,
    0xA2, 0x57, 0xD0, 0x1F, 0x70, 0x08, 0xA2, 0x66, 0xD0, 0x1F, 0x70, 0x08,
    0xA2, 0x75, 0xD0, 0x1F, 0x12, 0x28, 0xFF, 0x00, 0xFF, 0x00, 0x3C, 0x00,
    0x3C, 0x00, 0x3C, 0x00, 0x3C, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF,
    0x00, 0x38, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x38, 0x00, 0xFF, 0x00, 0xFF,
    0x80, 0x00, 0xE0, 0x00, 0xE0, 0x00, 0x80, 0x00, 0x80, 0x00, 0xE0, 0x00,
    0xE0, 0x00, 0x80, 0xF8, 0x00, 0xFC, 0x00, 0x3E, 0x00, 0x3F, 0x00, 0x3B,
    0x00, 0x39, 0x00, 0xF8, 0x00, 0xF8, 0x03, 0x00, 0x07, 0x00, 0x0F, 0x00,
    0xBF, 0x00, 0xFB, 0x00, 0xF3, 0x00, 0xE3, 0x00, 0x43, 0xE0, 0x00, 0xE0,
    0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xE0, 0x00, 0xE0};

TEST(ROMLoader, testReadOneByteData) {
  std::stringstream input_stream;
  input_stream << char(0x00) << char(0xE0);
  RAM ram;

  loadProgram(ram, input_stream);

  EXPECT_EQ(ram[0], 0x0);
  EXPECT_EQ(ram[0x201], 0xE0);
}

TEST(ROMLoader, testReadSimpleProgram) {
  std::stringstream input_stream;
  std::ostream_iterator<char> input_stream_iter(input_stream);
  std::copy(LOGO_EXAMPLE.begin(), LOGO_EXAMPLE.end(), input_stream_iter);
  RAM ram;

  loadProgram(ram, input_stream);

  EXPECT_EQ(ram[0], 0x0);
  EXPECT_EQ(ram[0x200], 0x00);
  EXPECT_EQ(ram[0x201], 0xE0);
}
